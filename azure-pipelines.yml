trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  DOCKER_IMAGE_NAME: 'php-app'
  DOCKER_REGISTRY: 'youracr.azurecr.io'  # Change this if using Docker Hub
  AZURE_VM_IP: 'your-vm-ip'
  AZURE_VM_USER: 'your-vm-username'

stages:
- stage: Build
  displayName: "Build and Push Docker Image"
  jobs:
  - job: BuildDocker
    displayName: "Build and Push Docker Image"
    steps:
    - checkout: self

    - task: Docker@2
      displayName: "Login to Container Registry"
      inputs:
        command: login
        containerRegistry: "your-acr-service-connection"  # If using ACR
        username: $(DOCKER_HUB_USERNAME)  # If using Docker Hub
        password: $(DOCKER_HUB_PASSWORD)

    - task: Docker@2
      displayName: "Build Docker Image"
      inputs:
        command: build
        Dockerfile: '**/Dockerfile'
        repository: "$(DOCKER_REGISTRY)/$(DOCKER_IMAGE_NAME)"
        tags: latest

    - task: Docker@2
      displayName: "Push Docker Image"
      inputs:
        command: push
        repository: "$(DOCKER_REGISTRY)/$(DOCKER_IMAGE_NAME)"
        tags: latest

- stage: Deploy
  displayName: "Deploy to Azure VM"
  jobs:
  - job: DeployToVM
    displayName: "Deploy Docker Container on Azure VM"
    steps:
    - task: SSH@0
      displayName: "Deploy to VM via SSH"
      inputs:
        sshEndpoint: "your-azure-vm-connection"
        runOptions: "inline"
        inline: |
          docker stop php-app || true
          docker rm php-app || true
          docker pull $(DOCKER_REGISTRY)/$(DOCKER_IMAGE_NAME):latest
          docker run -d -p 80:80 --name php-app $(DOCKER_REGISTRY)/$(DOCKER_IMAGE_NAME):latest
